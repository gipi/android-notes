Cyanogenmod allows to build for your device an Android distribution; in most cases however the official
repository doesn't contain your device so you must download from another repository with its manifest.

If you don't want to re-download all the things but using the previous donwloaded code, you can use
a separate manifest from that repository saving it in a temporary location and using it with ``repo sync``
and its ``-m`` option (using a absolute path to it).

For example in the following commands we use the repository for the motorola

    $ wget https://raw.github.com/kfazz/android/jellybean/default.xml -O .repo/motorola_sholes.xml
    $ repo sync -m .repo/motorola_sholes.xml -j 6

Links
-----

 - http://linux-sunxi.org/Starting_a_CyanogenMod_device_tree

HUAWEI8800pro
-------------

Holding Volume up and Volume down while power on the phone, a pink screen will appear; if you connect the cellphone to your computer with the mini usb cable you can access the partitions like an usb key.

If you want to compile cyanogenmod, this is the ``local_manifest.xml`` used by me

    <?xml version="1.0" encoding="UTF-8"?>
    <manifest>
      <project name="Blefish/android_device_huawei_u8800/" path="device/huawei/u8800" remote="github" revision="ics" />
      <project name="Blefish/android_kernel_huawei_u8800/" path="kernel/huawei/u8800" remote="github" revision="ics_chocolate" />
    </manifest>

And this is the modification done in order to made compilable

```
project device/huawei/u8800/
diff --git a/BoardConfig.mk b/BoardConfig.mk
index 758a74e..bc866f6 100644
--- a/BoardConfig.mk
+++ b/BoardConfig.mk
@@ -137,7 +137,7 @@ BOARD_FLASH_BLOCK_SIZE := 262144 # (BOARD_KERNEL_PAGESIZE * 64)
 BOARD_CUSTOM_GRAPHICS := ../../../device/huawei/u8800/recovery/graphics.c
 BOARD_USE_CUSTOM_RECOVERY_FONT := \"roboto_10x18.h\"
 BOARD_HAS_NO_SELECT_BUTTON := true
-BOARD_TOUCH_RECOVERY := true
+#BOARD_TOUCH_RECOVERY := false
 
 # Custom releasetools for old partition table.
 TARGET_PROVIDES_RELEASETOOLS := true
diff --git a/proprietary-files.txt b/proprietary-files.txt
index dbabfed..369dc93 100644
--- a/proprietary-files.txt
+++ b/proprietary-files.txt
@@ -2,6 +2,7 @@ bin/qmuxd
 bin/cnd
 bin/rmt_storage
 bin/oem_rpc_svc
+lib/libmmjpeg.so
 lib/libxml.so
 lib/libcneutils.so
 lib/libcneqmiutils.so
```

before compile

```
$ cd vendor/cm
$ ./get-prebuilts
$ cd device/huawei/u8800
$ ./extract-files.sh
```

TROUBLESHOOTING
---------------

First of all, this is the [android-building](http://groups.google.com/group/android-building) group

    /bin/bash: prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.6/bin/arm-linux-androideabi-gcc: cannot execute binary file

go to the prebuilt directory and checkout the revision with the toolchain for x86

    $ cd prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.6/
    "(android-4.1.1_r6.1)" branch :) $ git tag
    android-4.1.1_r1
    android-4.1.1_r1.1
    android-4.1.1_r2
    android-4.1.1_r3
    android-4.1.1_r4
    android-4.1.1_r5
    android-4.1.1_r6
    android-4.1.1_r6.1
    android-4.1.2_r1
    android-cts-4.1_r1
    android-sdk-adt_r20
    "(android-4.1.1_r6.1)" branch :) $ git checkout android-sdk-adt_r20