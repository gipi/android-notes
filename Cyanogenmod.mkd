Cyanogenmod allows to build for your device an Android distribution; in most cases however the official
repository doesn't contain your device so you must download from another repository with its manifest.

If you don't want to re-download all the things but using the previous donwloaded code, you can use
a separate manifest from that repository saving it in a temporary location and using it with ``repo sync``
and its ``-m`` option (using a absolute path to it).

For example in the following commands we use the repository for the motorola

    $ wget https://raw.github.com/kfazz/android/jellybean/default.xml -O .repo/motorola_sholes.xml
    $ repo sync -m .repo/motorola_sholes.xml -j 6

HUAWEI8800pro
-------------

    <?xml version="1.0" encoding="UTF-8"?>
    <manifest>
      <project name="Blefish/android_device_huawei_u8800/" path="device/huawei/u8800" remote="github" revision="ics" />
      <project name="Blefish/android_kernel_huawei_u8800/" path="kernel/huawei/u8800" remote="github" revision="ics_chocolate" />
    </manifest>

TROUBLESHOOTING
---------------

First of all, this is the [android-building](http://groups.google.com/group/android-building) group

    /bin/bash: prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.6/bin/arm-linux-androideabi-gcc: cannot execute binary file

go to the prebuilt directory and checkout the revision with the toolchain for x86

    $ cd prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.6/
    "(android-4.1.1_r6.1)" branch :) $ git tag
    android-4.1.1_r1
    android-4.1.1_r1.1
    android-4.1.1_r2
    android-4.1.1_r3
    android-4.1.1_r4
    android-4.1.1_r5
    android-4.1.1_r6
    android-4.1.1_r6.1
    android-4.1.2_r1
    android-cts-4.1_r1
    android-sdk-adt_r20
    "(android-4.1.1_r6.1)" branch :) $ git checkout android-sdk-adt_r20